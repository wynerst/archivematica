---
name: "Test"
on:
  pull_request:
  push:
    branches:
      - "qa/**"
      - "dev/issue-1140-test-settings"
jobs:
  test:
    name: "Test ${{ matrix.rule }}"
    runs-on: "ubuntu-18.04"
    strategy:
      matrix:
        rule:
          - mcpserver
          - mcpclient
          - dashboard
          - storage-service
          - archivematica-common
          - checkformigrations
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v2"
        with:
          ref: "dev/issue-1140-test-settings"
          submodules: true
      - name: "Create external volumes"
        run: |
          make -C hack/ create-volumes
      - name: "Build containers"
        run: |
          make -C hack/ test-build
      - name: "Run make rule"
        run: |
          make -C hack/ test-${{ matrix.rule }} TOXARGS='--parallel'
  frontend:
    name: "Test frontend"
    runs-on: "ubuntu-18.04"
    defaults:
      run:
        working-directory: "./src/dashboard/frontend/"
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v2"
        with:
          ref: "dev/issue-1140-test-settings"
      - name: "Set up Node JS"
        uses: "actions/setup-node@v2-beta"
        with:
          node-version: "8"
      - name: "Cache npm packages"
        uses: "actions/cache@v2"
        with:
          path: "~/.npm"
          key: "${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}"
          restore-keys: |
            ${{ runner.os }}-node-
      - name: "Install frontend dependencies"
        run: |
          npm install
      - name: "Run tests"
        run: |
          npm run "test-single-run"
  linting:
    name: "Lint"
    runs-on: "ubuntu-18.04"
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v2"
        with:
          ref: "dev/issue-1140-test-settings"
      - name: "Set up Python 3.7"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.7"
      - name: "Install tox"
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: "Run tox"
        run: |
          tox -e linting
